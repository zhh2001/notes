struct S {
    bit<32> b32;
    bool    b;
} 

enum int<8> N0 {
    one  = 1,
    zero = 0,
    two  = 2
} 

enum N1 {
    A, B, C, F
} 

struct T {
    S  s;
    N0 n0;
    N1 n1;
} 

header H {
    bit<16> f1;
    bit<8>  f2;
}

N0 n0 = ...;                // 使用默认值 0 初始化 n0
N1 n1 = ...;                // 使用默认值 N1.A 初始化 n1
S  s0 = ...;                // 使用默认值 { 0, false } 初始化 s0
S  s1 = { 1, ... };         // 使用值 { 1, false } 初始化 s1
S  s2 = { b = true, ... };  // 使用值 { 0, true } 初始化 s2
T  t0 = ...;                // 使用值 { { 0, false }, 0, N1.A } 初始化 t0
T  t1 = { s = ..., ... };   // 使用值 { { 0, false }, 0, N1.A } 初始化 t1
T  t2 = { s = ... };        // 错误：未为字段 n0 和 n1 指定初始化器
tuple<N0, N1> p = { ... };  // 使用默认值 { 0, N1.A } 初始化 p
T  t3 = { ..., n0 = 2};     // 错误：... 必须位于最后
H  h1 = ...;                // 初始化 h1 为无效的头
H  h2 = { f2=5, ... };      // 初始化 h2 为有效的头，字段 f1 为 0，字段 f2 为 5
H  h3 = { ... };            // 初始化 h3 为有效的头，字段 f1 为0，字段 f2 为0